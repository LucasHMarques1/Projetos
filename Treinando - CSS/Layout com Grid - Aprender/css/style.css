* {
    box-sizing: border-box;
    margin: 0px;
    font-family: Arial, Helvetica, sans-serif;
}

.box {
    background: #bdbdbd;
    border: 2px solid #333;
    padding: 10px;
}

.container {
    display: grid; /* Estrutura do Site */
    /* height: 100vh; Altura Toda */

    grid-template-columns: repeat(3, 1fr); /* Coluna dos Itens */
    /* grid-template-rows: repeat(3, 1fr); Linhas dos Itens */

    /* grid-gap: 10px;  Margem nos grids */
    /* grid-row-gap: 10px; Margem entre as Linhas */
    /* grid-column-gap: 10px; Margem entre as Colunas */
    grid-auto-rows: 200px; /* Vai atribuir um tamanho de 50px para as linhas parecido com o GRID-TEMPLATE-ROWS */
    /* grid-auto-rows: minmax(50px, auto); MIN 50PX E MAX DE ACORDO COM O TAMANHO DO CONTEUDO DE DENTRO DO ELEMENTO*/
    grid-template-areas: 
    "box-1 box-1 box-1"
    "box-2 box-2 box-3"
    "box-2 box-2 box-3"
    "box-4 box-4 box-4"; /* Basicamente escreve o layout, coloquei a opção onde ficará cada elemento, logo depois tenho que "declarar" qual é a box-1, box-2 ...... com GRID-AREA: NOME DA CAIXA */

    align-items: stretch; /*
    É A ALTURA E POSIÇÃO
    stretch = padrão.
    center = Vai ocupar a altura que o item necessita.
    start = vai posicionar na reta da linha de cima e vai ocupar a altura que o item necessita.
    end = vai posicionar na reta da linha de baixo e vai ocupar a altura que o item necessita.
    */

    justify-items: stretch; /* 
    É A LARGURA E POSIÇÃO
    stretch = padrão.
    center = alinha no meio da caixa e vai ocupar a largura que o item necessita.
    start = vai posicionar na linha da esquerda e vai ocupar a largura que o item necessita.
    end = vai posicionar na linha da direita e vai ocupar a largura que o item necessita.
    */
}

.box-1 {
    /* grid-column: 1/4; O BOX-1 vai da linha 1 até a 4 de forma horizontal, jogando os outros box para baixo*/
    /* grid-row: 1/3; O BOX-1 vai da linha 1 até a 3 de forma vertical, jogando os outros box pro lado*/
    grid-area: box-1; /* Corresponde a box-1 do grid-template-areas na classe CONTAINER */
}

.box-2 {
    grid-area: box-2; /* Corresponde a box-2 do grid-template-areas na classe CONTAINER */
}

.box-3 {
    grid-area: box-3; /* Corresponde a box-3 do grid-template-areas na classe CONTAINER */
}

.box-4 {
    grid-area: box-4; /* Corresponde a box-4 do grid-template-areas na classe CONTAINER */
}